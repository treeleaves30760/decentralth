{"version":3,"sources":["webpack:///./node_modules/@toruslabs/solana-embed/node_modules/@solana/web3.js/lib/index.browser.esm.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/eth-rpc-errors/dist/errors.js","webpack:///./node_modules/@web3auth/torus-solana-adapter/dist/torusSolanaAdapter.esm.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/tweetnacl/nacl-fast.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/is-stream/index.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/eth-rpc-errors/dist/utils.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/eth-rpc-errors/dist/index.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/eth-rpc-errors/dist/error-constants.js","webpack:///./node_modules/fast-deep-equal/index.js","webpack:///./node_modules/@toruslabs/solana-embed/dist/solanaEmbed.esm.js","webpack:///./node_modules/@toruslabs/solana-embed/node_modules/eth-rpc-errors/dist/classes.js"],"names":["toBuffer","arr","isBuffer","Uint8Array","from","buffer","byteOffset","byteLength","commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","hash$1","utils$9","minimalisticAssert","assert$6","val","msg","Error","equal","l","r","inherits_browser","exports","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","assert$5","inherits","isSurrogatePair","i","charCodeAt","length","toArray","enc","Array","isArray","slice","res","replace","push","parseInt","p","c","toHex","zero2","toString","htonl","w","toHex32","endian","zero8","word","join32","start","end","len","k","split32","m","rotr32$1","b","rotl32$2","sum32$3","a","sum32_3$1","sum32_4$2","d","sum32_5$2","e","sum64$1","buf","pos","ah","al","bh","bl","lo","hi","sum64_hi$1","sum64_lo$1","sum64_4_hi$1","ch","cl","dh","dl","carry","sum64_4_lo$1","sum64_5_hi$1","eh","el","sum64_5_lo$1","rotr64_hi$1","num","rotr64_lo$1","shr64_hi$1","shr64_lo$1","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","common$5","utils$8","assert$4","BlockHash$4","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash","update","concat","_update","digest","_pad","_digest","bytes","t","sha","common$4","utils$7","ft_1$1","s","y","z","ch32$1","p32","maj32$1","s0_256$1","s1_256$1","g0_256$1","g1_256$1","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","utils$6","common$3","shaCommon$1","rotl32$1","sum32$2","sum32_5$1","BlockHash$3","sha1_K","SHA1","h","W","_1","utils$5","common$2","shaCommon","assert$3","sum32$1","sum32_4$1","BlockHash$2","sha256_K","SHA256$1","_256","f","g","T1","T2","utils$4","SHA256","SHA224","_224","utils$3","common$1","assert$2","BlockHash$1","sha512_K","SHA512$1","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","c0_hi","c1_hi","c2_hi","s0_512_lo","c0_lo","c1_lo","c2_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","utils$2","SHA512","SHA384","_384","sha1","sha224","sha256","sha384","sha512","ripemd","utils$1","common","RIPEMD160","j","K","Kh","ripemd160","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","utils","assert$1","Hmac","hash","key","Hash","inner","outer","_init","hmac","version$2","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_checkNormalize","missing","forEach","form","normalize","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","hex","JSON","stringify","reason","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","MISSING_NEW","censorship","permanent","globalLogger","warn","version$1","logger","isHexable","addSlice","array","arguments","isInteger","isBytes","v","arrayify","options","checkSafeUint53","result","unshift","allowMissingPrefix","substring","toHexString","isHexString","hexPad","match","data","Struct","properties","assign","SOLANA_SCHEMA","Map","MAX_SEED_LENGTH","isPublicKeyData","undefined","_bn","PublicKey","super","decoded","decode","publicKey","eq","encode","toBytes","toBase58","toArrayLike","zeroPad","alloc","copy","fromPublicKey","seed","programId","seeds","TypeError","publicKeyBytes","is_on_curve","address","nonce","seedsWithNonce","createProgramAddress","err","pubkey","default","set","fields","naclLowLevel","lowlevel","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","Z","pow2523","neq25519","I","pack25519","crypto_verify_32","property","rustString","rsl","_decode","bind","_encode","offset","str","chars","span","authorized","lockup","voteInit","getAlloc","type","layout","item","decodeLength","size","elem","shift","encodeLength","rem_len","PUBKEY_LENGTH","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","map","account","ix","programIdIndex","index","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","has","values","filter","_","isProgramId","numKeys","keyCount","instruction","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","PACKET_DATA_SIZE","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","assert","DEFAULT_SIGNATURE","fill","SIGNATURE_LENGTH","TransactionInstruction","opts","Transaction","signatures","signature","feePayer","nonceInfo","items","nonceInstruction","programIds","accountMetas","accountMeta","includes","isSigner","isWritable","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","equals","payerMeta","splice","signedKeys","unsignedKeys","indexOf","meta","keyIndex","compileMessage","valid","every","pair","_compile","serialize","signers","seen","Set","add","uniqueSigners","signer","_partialSign","_verifySignatures","sign","detached","secretKey","_addSignature","sigpair","serializeMessage","requireAllSignatures","verify","config","verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","isAccountSigner","isAccountWritable","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","connection","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","authorizedPubkey","nonceInitialize","instructionData","newAuthorizedPubkey","CHUNK_SIZE","Loader","Math","ceil","chunkSize","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","_rpcEndpoint","REQUESTS_PER_SECOND","all","browserPonyfill","module","__self__","F","fetch","DOMException","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","isDataView","obj","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","test","normalizeValue","iteratorFor","iterator","next","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","bufferClone","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","get","rejected","then","text","json","parse","oldValue","callback","thisArg","entries","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","url","credentials","mode","signal","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","slot","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","epoch","effectiveSlot","amount","postBalance","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","rentEpoch","unitsConsumed","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","state","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","PerfSampleResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","feeCalculator","lamportsPerSignature","lastValidBlockHeight","numTransactions","numSlots","samplePeriodSecs","LogsResult","Keypair","keypair","_keypair","keyPair","fromSecretKey","skipValidation","encoder","TextEncoder","fromSeed","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","sourceStakePubKey","publicKeyCreate","ecdsaSign","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","ethErrors","classes_1","utils_1","error_constants_1","getEthJsonRpcError","arg","parseOpts","EthereumRpcError","getMessageFromCode","getEthProviderError","EthereumProviderError","errorCodes","invalidRequest","invalidParams","methodNotFound","internal","server","Number","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","provider","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","custom","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","SolanaWalletAdapter","TORUS_SOLANA","SOLANA","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","loginSettings","chainConfig","_this$solanaProvider","CONNECTED","solanaProvider","network","checkInitializationRequirements","chainId","blockExplorer","displayName","rpcTarget","ticker","tickerName","blockExplorerUrl","logo","torusInstance","showTorusButton","READY","emit","autoConnect","rehydrated","connect","ERRORED","checkConnectionRequirements","notReady","CONNECTING","adapter","login","setupProvider","reconnected","connectionError","cleanup","notConnectedError","logout","DISCONNECTED","userInfo","getUserInfo","nacl","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","n","crypto_verify_16","core_salsa20","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_hsalsa20","crypto_core_salsa20","out","inp","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","car25519","floor","sel25519","q","par25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","inv25519","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","unpackneg","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","checkLengths","checkBoxLengths","checkArrayTypes","randomBytes","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","sig","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","QUOTA","min","isStream","stream","pipe","isWritableStream","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","serializeError","isValidCode","JSON_RPC_SERVER_ERROR_MESSAGE","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","hasKey","errorValues","isJsonRpcServerError","fallbackError","shouldIncludeStack","_a","_b","serialized","_error","originalError","assignOriginalError","errors_1","standard","RegExp","flags","valueOf","messages","permanentlyDisconnected","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","warnings","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","configuration","supportedVerifierList","api","prodTorusUrl","localStorageKey","hostname","getLogger","createErrorMiddleware","req","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","listenerCount","getWindowId","random","getTorusUrl","torusUrl","buildEnv","getUserLanguage","userLanguage","navigator","language","userLanguages","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","storage","setItem","removeItem","getPopupFeatures","_ref","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","BaseProvider","connectionStream","jsonRpcStreamName","isTorus","setMaxListeners","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","sendAsync","mux","ignoreStream","jsonRpcConnection","createStream","rpcEngine","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","payload","streamName","handleEvent","handle","eventName","handler","_len","handlerArgs","_key","handlerWrapper","documentReady","htmlToElement","html","template","createElement","trimmedHtml","innerHTML","content","firstChild","PopupHandler","windowTimer","iClosedWindow","_setupTimer","setInterval","closed","clearInterval","_this$window","href","focus","close","locationReplaceOnRedirect","ownKeys$2","_objectSpread$2","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","embedTranslations","windowRefs","on","isConnected","notificationHandler","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","GET_PROVIDER_STATE","initialized","finalUrl","URL","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","right","bottom","torusWidgetVisibility","buttonPosition","cb","_payload","tryWindowHandle","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","_handleWindow","remove","children","attachOnLoad","ownKeys$1","_objectSpread$1","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","isUnlocked","isInternal","isEthAccounts","finalAccounts","imgExists","img","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","enableLogging","useLocalStorage","apiKey","extraParams","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","styleLink","handleSetup","dappMetadata","contentWindow","postMessage","_setupWeb3","hideTorusButton","torus","loginProvider","login_hint","LOGOUT","clearInit","isElement","element","Element","Document","contains","path","instanceId","WALLET_INSTANCE_ID","finalPath","walletWindow","userInfoResponse","USER_INFO","topupResponse","TOPUP","Buffer","sendTx","encodedTransactions","allSignedTransaction","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","targetWindow","communicationStream","inPageProvider","detectAccountRequestPrototypeModifier","originalMethod","catch","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","fast_safe_stringify_1","stringifyReplacer","isValidEthProviderCode"],"mappings":"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","file":"js/chunk-6afecb0b.4de96a6b.js","sourcesContent":["import nacl from 'tweetnacl';\nimport { Buffer } from 'buffer';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { coerce, instance, string, tuple, literal, unknown, union, type, optional, any, number, array, nullable, create, boolean, record, assert as assert$7 } from 'superstruct';\nimport { Client } from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar hash$1 = {};\n\nvar utils$9 = {};\n\nvar minimalisticAssert = assert$6;\n\nfunction assert$6(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert$6.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar inherits_browser = {exports: {}};\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar assert$5 = minimalisticAssert;\nvar inherits = inherits_browser.exports;\n\nutils$9.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils$9.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils$9.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils$9.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils$9.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils$9.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils$9.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert$5(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils$9.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils$9.split32 = split32;\n\nfunction rotr32$1(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils$9.rotr32 = rotr32$1;\n\nfunction rotl32$2(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils$9.rotl32 = rotl32$2;\n\nfunction sum32$3(a, b) {\n  return (a + b) >>> 0;\n}\nutils$9.sum32 = sum32$3;\n\nfunction sum32_3$1(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils$9.sum32_3 = sum32_3$1;\n\nfunction sum32_4$2(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils$9.sum32_4 = sum32_4$2;\n\nfunction sum32_5$2(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils$9.sum32_5 = sum32_5$2;\n\nfunction sum64$1(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nutils$9.sum64 = sum64$1;\n\nfunction sum64_hi$1(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nutils$9.sum64_hi = sum64_hi$1;\n\nfunction sum64_lo$1(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nutils$9.sum64_lo = sum64_lo$1;\n\nfunction sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_4_hi = sum64_4_hi$1;\n\nfunction sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nutils$9.sum64_4_lo = sum64_4_lo$1;\n\nfunction sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_5_hi = sum64_5_hi$1;\n\nfunction sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nutils$9.sum64_5_lo = sum64_5_lo$1;\n\nfunction rotr64_hi$1(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_hi = rotr64_hi$1;\n\nfunction rotr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_lo = rotr64_lo$1;\n\nfunction shr64_hi$1(ah, al, num) {\n  return ah >>> num;\n}\nutils$9.shr64_hi = shr64_hi$1;\n\nfunction shr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.shr64_lo = shr64_lo$1;\n\nvar common$5 = {};\n\nvar utils$8 = utils$9;\nvar assert$4 = minimalisticAssert;\n\nfunction BlockHash$4() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\ncommon$5.BlockHash = BlockHash$4;\n\nBlockHash$4.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils$8.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils$8.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash$4.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert$4(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash$4.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar sha = {};\n\nvar common$4 = {};\n\nvar utils$7 = utils$9;\nvar rotr32 = utils$7.rotr32;\n\nfunction ft_1$1(s, x, y, z) {\n  if (s === 0)\n    return ch32$1(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32$1(x, y, z);\n}\ncommon$4.ft_1 = ft_1$1;\n\nfunction ch32$1(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\ncommon$4.ch32 = ch32$1;\n\nfunction maj32$1(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\ncommon$4.maj32 = maj32$1;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\ncommon$4.p32 = p32;\n\nfunction s0_256$1(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\ncommon$4.s0_256 = s0_256$1;\n\nfunction s1_256$1(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\ncommon$4.s1_256 = s1_256$1;\n\nfunction g0_256$1(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\ncommon$4.g0_256 = g0_256$1;\n\nfunction g1_256$1(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\ncommon$4.g1_256 = g1_256$1;\n\nvar utils$6 = utils$9;\nvar common$3 = common$5;\nvar shaCommon$1 = common$4;\n\nvar rotl32$1 = utils$6.rotl32;\nvar sum32$2 = utils$6.sum32;\nvar sum32_5$1 = utils$6.sum32_5;\nvar ft_1 = shaCommon$1.ft_1;\nvar BlockHash$3 = common$3.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash$3.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils$6.inherits(SHA1, BlockHash$3);\nvar _1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$6.toHex32(this.h, 'big');\n  else\n    return utils$6.split32(this.h, 'big');\n};\n\nvar utils$5 = utils$9;\nvar common$2 = common$5;\nvar shaCommon = common$4;\nvar assert$3 = minimalisticAssert;\n\nvar sum32$1 = utils$5.sum32;\nvar sum32_4$1 = utils$5.sum32_4;\nvar sum32_5 = utils$5.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash$2 = common$2.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256$1() {\n  if (!(this instanceof SHA256$1))\n    return new SHA256$1();\n\n  BlockHash$2.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils$5.inherits(SHA256$1, BlockHash$2);\nvar _256 = SHA256$1;\n\nSHA256$1.blockSize = 512;\nSHA256$1.outSize = 256;\nSHA256$1.hmacStrength = 192;\nSHA256$1.padLength = 64;\n\nSHA256$1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert$3(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$1(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$1(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$1(T1, T2);\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n  this.h[5] = sum32$1(this.h[5], f);\n  this.h[6] = sum32$1(this.h[6], g);\n  this.h[7] = sum32$1(this.h[7], h);\n};\n\nSHA256$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$5.toHex32(this.h, 'big');\n  else\n    return utils$5.split32(this.h, 'big');\n};\n\nvar utils$4 = utils$9;\nvar SHA256 = _256;\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils$4.inherits(SHA224, SHA256);\nvar _224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils$4.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils$4.split32(this.h.slice(0, 7), 'big');\n};\n\nvar utils$3 = utils$9;\nvar common$1 = common$5;\nvar assert$2 = minimalisticAssert;\n\nvar rotr64_hi = utils$3.rotr64_hi;\nvar rotr64_lo = utils$3.rotr64_lo;\nvar shr64_hi = utils$3.shr64_hi;\nvar shr64_lo = utils$3.shr64_lo;\nvar sum64 = utils$3.sum64;\nvar sum64_hi = utils$3.sum64_hi;\nvar sum64_lo = utils$3.sum64_lo;\nvar sum64_4_hi = utils$3.sum64_4_hi;\nvar sum64_4_lo = utils$3.sum64_4_lo;\nvar sum64_5_hi = utils$3.sum64_5_hi;\nvar sum64_5_lo = utils$3.sum64_5_lo;\n\nvar BlockHash$1 = common$1.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512$1() {\n  if (!(this instanceof SHA512$1))\n    return new SHA512$1();\n\n  BlockHash$1.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils$3.inherits(SHA512$1, BlockHash$1);\nvar _512 = SHA512$1;\n\nSHA512$1.blockSize = 1024;\nSHA512$1.outSize = 512;\nSHA512$1.hmacStrength = 192;\nSHA512$1.padLength = 128;\n\nSHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512$1.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert$2(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$3.toHex32(this.h, 'big');\n  else\n    return utils$3.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nvar utils$2 = utils$9;\n\nvar SHA512 = _512;\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils$2.inherits(SHA384, SHA512);\nvar _384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$2.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils$2.split32(this.h.slice(0, 12), 'big');\n};\n\nsha.sha1 = _1;\nsha.sha224 = _224;\nsha.sha256 = _256;\nsha.sha384 = _384;\nsha.sha512 = _512;\n\nvar ripemd = {};\n\nvar utils$1 = utils$9;\nvar common = common$5;\n\nvar rotl32 = utils$1.rotl32;\nvar sum32 = utils$1.sum32;\nvar sum32_3 = utils$1.sum32_3;\nvar sum32_4 = utils$1.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils$1.inherits(RIPEMD160, BlockHash);\nripemd.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$1.toHex32(this.h, 'little');\n  else\n    return utils$1.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar utils = utils$9;\nvar assert$1 = minimalisticAssert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert$1(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n(function (exports) {\nvar hash = exports;\n\nhash.utils = utils$9;\nhash.common = common$5;\nhash.sha = sha;\nhash.ripemd = ripemd;\nhash.hmac = hmac;\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n}(hash$1));\n\nvar hash = hash$1;\n\nconst version$2 = \"logger/5.5.0\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\nconst HEX = \"0123456789abcdef\";\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version$2);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n\nconst version$1 = \"bytes/5.5.0\";\n\nconst logger = new Logger(version$1);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\n\nconst version = \"sha2/5.5.0\";\n\nnew Logger(version);\nfunction sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n\n} // Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\n\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n\n}\nconst SOLANA_SCHEMA = new Map();\n\n/**\n * Maximum length of derived pubkey seed\n */\n\nconst MAX_SEED_LENGTH = 32;\n/**\n * Value to be converted into public key\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n/**\n * A public key\n */\n\n\nclass PublicKey extends Struct {\n  /** @internal */\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    this._bn = void 0;\n\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n  /**\n   * Default public key value. (All zeros)\n   */\n\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON() {\n    return this.toBase58();\n  }\n  /**\n   * Return the byte array representation of the public key\n   */\n\n\n  toBytes() {\n    return this.toBuffer();\n  }\n  /**\n   * Return the Buffer representation of the public key\n   */\n\n\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toString() {\n    return this.toBase58();\n  }\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createProgramAddress(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n\n    return new PublicKey(publicKeyBytes);\n  }\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n\n\n  static async findProgramAddress(seeds, programId) {\n    let nonce = 255;\n    let address;\n\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n\n        nonce--;\n        continue;\n      }\n\n      return [address, nonce];\n    }\n\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n\n\n  static isOnCurve(pubkey) {\n    return is_on_curve(pubkey) == 1;\n  }\n\n}\nPublicKey.default = new PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n}); // @ts-ignore\n\nlet naclLowLevel = nacl.lowlevel; // Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\n\nfunction is_on_curve(p) {\n  var r = [naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf()];\n  var t = naclLowLevel.gf(),\n      chk = naclLowLevel.gf(),\n      num = naclLowLevel.gf(),\n      den = naclLowLevel.gf(),\n      den2 = naclLowLevel.gf(),\n      den4 = naclLowLevel.gf(),\n      den6 = naclLowLevel.gf();\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\n\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\n\nclass Account {\n  /** @internal */\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    this._keypair = void 0;\n\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * The public key for this account\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The **unencrypted** secret key for this account\n   */\n\n\n  get secretKey() {\n    return toBuffer(this._keypair.secretKey);\n  }\n\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Layout for a public key\n */\n\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n/**\n * Layout for a Rust String type\n */\n\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  rsl.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n\n  return rsl;\n};\n/**\n * Layout for an Authorized object\n */\n\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n/**\n * Layout for a Lockup object\n */\n\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n/**\n *  Layout for a VoteInit object\n */\n\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\nfunction getAlloc(type, fields) {\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\n/**\n * The message header, identifying signed and read-only account\n */\n\nconst PUBKEY_LENGTH = 32;\n/**\n * List of instructions to be processed atomically\n */\n\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index) {\n    return index < this.header.numRequiredSignatures - this.header.numReadonlySignedAccounts || index >= this.header.numRequiredSignatures && index < this.accountKeys.length - this.header.numReadonlyUnsignedAccounts;\n  }\n\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = bs58.decode(instruction.data);\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n  /**\n   * Decode a compiled message into a Message object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\n\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst SIGNATURE_LENGTH = 64;\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n\n  /**\n   * Program Id to execute\n   */\n\n  /**\n   * Program input\n   */\n  constructor(opts) {\n    this.keys = void 0;\n    this.programId = void 0;\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n}\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n\n    return null;\n  }\n  /**\n   * The transaction fee payer\n   */\n\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    this.signatures = [];\n    this.feePayer = void 0;\n    this.instructions = [];\n    this.recentBlockhash = void 0;\n    this.nonceInfo = void 0;\n    opts && Object.assign(this, opts);\n  }\n  /**\n   * Add one or more instructions to this Transaction\n   */\n\n\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n  /**\n   * Compile transaction data\n   */\n\n\n  compileMessage() {\n    const {\n      nonceInfo\n    } = this;\n\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n\n    const {\n      recentBlockhash\n    } = this;\n\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer;\n\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n\n    const programIds = [];\n    const accountMetas = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({ ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    }); // Append programID account metas\n\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    }); // Sort. Prioritizing first by signer, then by writable\n\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable = x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    }); // Cull duplicate account metas\n\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    }); // Move fee payer to the front\n\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    } // Disallow unknown signers\n\n\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0; // Split out signing from non-signing keys and count header values\n\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    instructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n\n\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n\n\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n\n\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n\n    this._verifySignatures(message.serialize(), true);\n  }\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n\n\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n  }\n  /**\n   * @internal\n   */\n\n\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n\n\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n\n\n    this._addSignature(pubkey, signature);\n  }\n  /**\n   * @internal\n   */\n\n\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n\n\n  verifySignatures() {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n  /**\n   * @internal\n   */\n\n\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n\n\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n  /**\n   * @internal\n   */\n\n\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n  /**\n   * Populate Transaction object from message and signatures\n   */\n\n\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    return transaction;\n  }\n\n}\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\n\nfunction decodeData(type, buffer) {\n  let data;\n\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\n\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n/**\n * Calculator for transaction fees.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\n\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), rustString('seed'), publicKey('programId')])\n  }\n});\n/**\n * Factory class for transactions to interact with the System program\n */\n\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the System program\n   */\n\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n\n\n  static transfer(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: params.lamports\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n\n\n  static assign(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n\n\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n\n\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n\n\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n\n\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n\n\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n\n\n  static allocate(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\n\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n/**\n * Program loader interface\n */\n\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * ( // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 + // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length); // Fetch program account info to check if it has already been created\n\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      } // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n\n\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      })); // Delay between sends in an attempt to reduce rate limit errors\n\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n\n    await Promise.all(transactions); // Finalize the account loaded with program data for execution\n\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      });\n    } // success\n\n    return true;\n  }\n\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n/**\n * Factory class for transactions to interact with a program loader\n */\n\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n\n}\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32; // Returns the number of trailing zeros in the binary representation of self.\n\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n\n  return trailingZeros;\n} // Returns the smallest power of two greater than or equal to n\n\n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\n\n\nclass EpochSchedule {\n  /** The maximum number of slots in each epoch */\n\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n\n  /** Indicates whether epochs start short and grow */\n\n  /** The first epoch with `slotsPerEpoch` slots */\n\n  /** The first slot of `firstNormalEpoch` */\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    this.slotsPerEpoch = void 0;\n    this.leaderScheduleSlotOffset = void 0;\n    this.warmup = void 0;\n    this.firstNormalEpoch = void 0;\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n/**\n * @internal\n */\n\nconst DEFAULT_TICKS_PER_SLOT = 64;\n/**\n * @internal\n */\n\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n/**\n * @internal\n */\n\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nfunction promiseTimeout(promise, timeoutMs) {\n  let timeoutId;\n  const timeoutPromise = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n  return Promise.race([promise, timeoutPromise]).then(result => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n\nfunction makeWebsocketUrl(endpoint) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = ''; // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n\n  return url.toString();\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\n\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n/**\n * @internal\n */\n\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return { ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n/**\n * @internal\n */\n\n\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number()\n}))));\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n/**\n * Transaction error or null\n */\n\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n/**\n * Signature status for a transaction\n */\n\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n/**\n * Transaction signature received notification\n */\n\nconst SignatureReceivedResult = literal('receivedSignature');\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  })))),\n  unitsConsumed: optional(number())\n}));\n\nfunction createRpcClient(url, useHttps, httpHeaders, fetchMiddleware, disableRetryOnRateLimit) {\n\n  let fetchWithMiddleware;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url, options) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) => resolve([modifiedUrl, modifiedOptions]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {})\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429\n        /* Too many requests */\n        ) {\n          break;\n        }\n\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n\n        too_many_requests_retries -= 1;\n\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n    }\n  }, {});\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\n\n\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\n\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\n\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\n\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\n\nconst SlotRpcResult = jsonRpcResult(number());\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\n\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\n\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n/**\n * @internal\n */\n\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n/**\n * @internal\n */\n\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n/**\n * @internal\n */\n\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\n\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\n\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\n\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\n\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\n\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\n\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\n\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\n\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\n\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\n\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string()\n  })\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(type({\n      pubkey: PublicKeyFromString,\n      signer: boolean(),\n      writable: boolean()\n    })),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string()\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\n/**\n * @internal\n */\n\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\n\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult\n})));\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\n\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\n\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\n\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\n\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\n\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\n\nconst SendTransactionRpcResult = jsonRpcResult(string());\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, commitmentOrConfig) {\n    this._commitment = void 0;\n    this._confirmTransactionInitialTimeout = void 0;\n    this._rpcEndpoint = void 0;\n    this._rpcWsEndpoint = void 0;\n    this._rpcClient = void 0;\n    this._rpcRequest = void 0;\n    this._rpcBatchRequest = void 0;\n    this._rpcWebSocket = void 0;\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketHeartbeat = null;\n    this._rpcWebSocketIdleTimeout = null;\n    this._disableBlockhashCaching = false;\n    this._pollingBlockhash = false;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    this._accountChangeSubscriptionCounter = 0;\n    this._accountChangeSubscriptions = {};\n    this._programAccountChangeSubscriptionCounter = 0;\n    this._programAccountChangeSubscriptions = {};\n    this._rootSubscriptionCounter = 0;\n    this._rootSubscriptions = {};\n    this._signatureSubscriptionCounter = 0;\n    this._signatureSubscriptions = {};\n    this._slotSubscriptionCounter = 0;\n    this._slotSubscriptions = {};\n    this._logsSubscriptionCounter = 0;\n    this._logsSubscriptions = {};\n    this._slotUpdateSubscriptionCounter = 0;\n    this._slotUpdateSubscriptions = {};\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(url.toString(), useHttps, httpHeaders, fetchMiddleware, disableRetryOnRateLimit);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new Client(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n  /**\n   * The default commitment used for requests\n   */\n\n\n  get commitment() {\n    return this._commitment;\n  }\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n\n\n  async getBalanceAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get balance for ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the balance for the specified public key\n   */\n\n\n  async getBalance(publicKey, commitment) {\n    return await this.getBalanceAndContext(publicKey, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Fetch the estimated production time of a block\n   */\n\n\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get block time for slot ' + slot + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n\n\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get minimum ledger slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n\n\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get first available block: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch information about the current supply\n   */\n\n\n  async getSupply(config) {\n    let configArg = {};\n\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = { ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current supply of a token mint\n   */\n\n\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current balance of a token account\n   */\n\n\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token account balance: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n\n\n  async getTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n\n\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n\n\n  async getLargestAccounts(config) {\n    const arg = { ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n\n\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get token largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n\n\n  async getAccountInfoAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n\n\n  async getParsedAccountInfo(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key\n   */\n\n\n  async getAccountInfo(publicKey, commitment) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n\n\n  async getMultipleAccountsInfo(publicKeys, configOrCommitment) {\n    const keys = publicKeys.map(key => key.toBase58());\n    let commitment;\n    let encoding = 'base64';\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n        encoding = 'base64';\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding || 'base64';\n      }\n    }\n\n    const args = this._buildArgs([keys], commitment, encoding);\n\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n\n    if ('error' in res) {\n      throw new Error('failed to get info for accounts ' + keys + ': ' + res.error.message);\n    }\n\n    return res.result.value;\n  }\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n\n\n  async getStakeActivation(publicKey, commitment, epoch) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined, epoch !== undefined ? {\n      epoch\n    } : undefined);\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n\n    if ('error' in res) {\n      throw new Error(`failed to get Stake Activation ${publicKey.toBase58()}: ${res.error.message}`);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n\n  async getProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n    let encoding;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n\n\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n\n\n  async confirmTransaction(signature, commitment) {\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n    let subscriptionId;\n    let response = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(signature, (result, context) => {\n          subscriptionId = undefined;\n          response = {\n            context,\n            value: result\n          };\n          resolve(null);\n        }, subscriptionCommitment);\n      } catch (err) {\n        reject(err);\n      }\n    });\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip':\n        {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(`Transaction was not confirmed in ${duration.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`);\n    }\n\n    return response;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot that the node is processing\n   */\n\n\n  async getSlot(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n\n\n  async getSlotLeader(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n\n\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current status of a signature\n   */\n\n\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n\n\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n\n    if (config) {\n      params.push(config);\n    }\n\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n\n\n  async getTransactionCount(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n\n\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n\n\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n\n\n  async getInflationReward(addresses, epoch, commitment) {\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined, {\n      epoch\n    });\n\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Info parameters\n   */\n\n\n  async getEpochInfo(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n\n\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n\n\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n\n\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n\n\n  async getRecentPerformanceSamples(limit) {\n    const args = this._buildArgs(limit ? [limit] : []);\n\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', args);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent performance samples: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n\n\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n\n\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = message.serialize().toString('base64');\n\n    const args = this._buildArgs([wireMessage], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhash(commitment) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the node version\n   */\n\n\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the genesis hash\n   */\n\n\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a processed block from the cluster.\n   */\n\n\n  async getBlock(slot, opts) {\n    const args = this._buildArgsAtLeastConfirmed([slot], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n  }\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n\n\n  async getTransaction(signature, opts) {\n    const args = this._buildArgsAtLeastConfirmed([signature], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transaction: { ...result.transaction,\n        message: new Message(result.transaction.message)\n      }\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n\n\n  async getParsedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n\n\n  async getParsedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n\n\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return { ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n\n\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n\n\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n\n\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n\n\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return { ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n\n\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n\n\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get confirmed transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n\n\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n\n    while (!('until' in options)) {\n      startSlot--;\n\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n\n    while (!('before' in options)) {\n      endSlot++;\n\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n\n\n  async getNonceAndContext(nonceAccount, commitment) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitment);\n    let value = null;\n\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n\n\n  async getNonce(nonceAccount, commitment) {\n    return await this.getNonceAndContext(nonceAccount, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n\n\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n\n    if ('error' in res) {\n      throw new Error('airdrop to ' + to.toBase58() + ' failed: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  async _recentBlockhash(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n\n    try {\n      const startTime = Date.now();\n\n      for (let i = 0; i < 50; i++) {\n        const {\n          blockhash\n        } = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return blockhash;\n        } // Sleep for approximately half a slot\n\n\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n  /**\n   * Simulate a transaction\n   */\n\n\n  async simulateTransaction(transactionOrMessage, signers, includeAccounts) {\n    let transaction;\n\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        if (!signers) break;\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n\n    const signData = message.serialize();\n\n    const wireTransaction = transaction._serialize(signData);\n\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * Sign and send a transaction\n   */\n\n\n  async sendTransaction(transaction, signers, options) {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n\n\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n\n\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnError(err) {\n    console.error('ws error:', err.message);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnClose(code) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n\n      return;\n    } // implicit close, prepare subscriptions for auto-reconnect\n\n\n    this._resetSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _subscribe(sub, rpcMethod, rpcArgs) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error for argument`, rpcArgs, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  async _unsubscribe(sub, rpcMethod) {\n    const subscriptionId = sub.subscriptionId;\n\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId = subscriptionId;\n\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._programAccountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._rootSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._signatureSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotUpdateSubscriptions).forEach(s => s.subscriptionId = null);\n  }\n  /**\n   * @internal\n   */\n\n\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(Number);\n    const programKeys = Object.keys(this._programAccountChangeSubscriptions).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n\n    if (accountKeys.length === 0 && programKeys.length === 0 && slotKeys.length === 0 && slotUpdateKeys.length === 0 && signatureKeys.length === 0 && rootKeys.length === 0 && logsKeys.length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'accountSubscribe', this._buildArgs([sub.publicKey], sub.commitment, 'base64'));\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'programSubscribe', this._buildArgs([sub.programId], sub.commitment, 'base64', {\n        filters: sub.filters\n      }));\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args = [sub.signature];\n      if (sub.options) args.push(sub.options);\n\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n\n      if (typeof sub.filter === 'object') {\n        filter = {\n          mentions: [sub.filter.toString()]\n        };\n      } else {\n        filter = sub.filter;\n      }\n\n      this._subscribe(sub, 'logsSubscribe', this._buildArgs([filter], sub.commitment));\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnAccountNotification(notification) {\n    const res = create(notification, AccountNotificationResult);\n\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n\n\n  onAccountChange(publicKey, callback, commitment) {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeAccountChangeListener(id) {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnProgramAccountNotification(notification) {\n    const res = create(notification, ProgramAccountNotificationResult);\n\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {\n          value,\n          context\n        } = res.result;\n        sub.callback({\n          accountId: value.pubkey,\n          accountInfo: value.account\n        }, context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n\n\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeProgramAccountChangeListener(id) {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n\n\n  onLogs(filter, callback, commitment) {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n\n\n  async removeOnLogsListener(id) {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnLogsNotification(notification) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotNotification(notification) {\n    const res = create(notification, SlotNotificationResult);\n\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n\n\n  onSlotChange(callback) {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotChangeListener(id) {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotUpdatesNotification(notification) {\n    const res = create(notification, SlotUpdateNotificationResult);\n\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n\n\n  onSlotUpdate(callback) {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotUpdateListener(id) {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment || encoding || extra) {\n      let options = {};\n\n      if (encoding) {\n        options.encoding = encoding;\n      }\n\n      if (commitment) {\n        options.commitment = commitment;\n      }\n\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n\n      args.push(options);\n    }\n\n    return args;\n  }\n  /**\n   * @internal\n   */\n\n\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n\n    return this._buildArgs(args, override, encoding, extra);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSignatureNotification(notification) {\n    const res = create(notification, SignatureNotificationResult);\n\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback({\n            type: 'received'\n          }, res.result.context);\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n\n          this._updateSubscriptions();\n\n          sub.callback({\n            type: 'status',\n            result: res.result.value\n          }, res.result.context);\n        }\n\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignature(signature, callback, commitment) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {\n        commitment\n      },\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignatureWithOptions(signature, callback, options) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSignatureListener(id) {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnRootNotification(notification) {\n    const res = create(notification, RootNotificationResult);\n\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n\n\n  onRootChange(callback) {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeRootChangeListener(id) {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * Generate a new random keypair\n   */\n\n\n  static generate() {\n    return new Keypair(nacl.sign.keyPair());\n  }\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n\n\n  static fromSecretKey(secretKey, options) {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n\n    return new Keypair(keypair);\n  }\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n\n\n  static fromSeed(seed) {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n  /**\n   * The public key for this keypair\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The raw secret key for this keypair\n   */\n\n\n  get secretKey() {\n    return this._keypair.secretKey;\n  }\n\n}\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      publicKeyOffset,\n      publicKeyInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\n\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n/**\n * Stake account authority info\n */\n\nclass Authorized {\n  /** stake authority */\n\n  /** withdraw authority */\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    this.staker = void 0;\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n\n}\n/**\n * Stake account lockup info\n */\n\nclass Lockup {\n  /** Unix timestamp of lockup expiration */\n\n  /** Epoch of lockup expiration */\n\n  /** Lockup custodian authority */\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    this.unixTimestamp = void 0;\n    this.epoch = void 0;\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n  /**\n   * Default, inactive Lockup value\n   */\n\n\n}\n/**\n * Create stake account transaction params\n */\n\nLockup.default = new Lockup(0, 0, PublicKey.default);\n\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Stake program\n */\n\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Stake program\n   */\n\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n\n\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n\n\n  static split(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: authorizedPubkey,\n      newAccountPubkey: splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return transaction.add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n\n\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n\n\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n\n\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\nStakeProgram.space = 200;\n\nconst {\n  publicKeyCreate,\n  ecdsaSign\n} = secp256k1;\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n\n    try {\n      return Buffer.from(sha3.keccak_256.update(toBuffer(publicKey)).digest()).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n\n\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n\n      const messageHash = Buffer.from(sha3.keccak_256.update(toBuffer(message)).digest());\n      const {\n        signature,\n        recid: recoveryId\n      } = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n/**\n * @internal\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n/**\n * ValidatorInfo class\n */\n\nclass ValidatorInfo {\n  /**\n   * validator public key\n   */\n\n  /**\n   * validator information\n   */\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    this.key = void 0;\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n\n\n  static fromConfigData(buffer) {\n    const PUBKEY_LENGTH = 32;\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$7(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(), // votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(), // authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(), // epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n\n}\n\nfunction parseAuthorizedVoter({\n  epoch,\n  authorizedVoter\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\n\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx)];\n}\n\n/**\n * Vote account info\n */\n\nclass VoteInit {\n  /** [0, 100] */\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n\n}\n/**\n * Create vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  }\n});\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Vote program\n */\n\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Vote program\n   */\n\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n\n\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n\n\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\nVoteProgram.space = 3731;\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n\n  return url;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\n\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, Loader, Lockup, MAX_SEED_LENGTH, Message, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PublicKey, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionInstruction, VALIDATOR_INFO_KEY, VOTE_PROGRAM_ID, ValidatorInfo, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethErrors = void 0;\nconst classes_1 = require(\"./classes\");\nconst utils_1 = require(\"./utils\");\nconst error_constants_1 = require(\"./error-constants\");\nexports.ethErrors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getEthJsonRpcError(code, opts);\n        },\n        /**\n         * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Ethereum Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Ethereum Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Ethereum Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n        },\n        /**\n         * Get a custom Ethereum Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new classes_1.EthereumProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBb0U7QUFDcEUsbUNBQTZDO0FBQzdDLHVEQUErQztBQWVsQyxRQUFBLFNBQVMsR0FBRztJQUN2QixHQUFHLEVBQUU7UUFFSDs7V0FFRztRQUNILEtBQUssRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUNyRCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUMxQjtRQUVEOztXQUVHO1FBQ0gsY0FBYyxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQzlELDRCQUFVLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQ25DO1FBRUQ7O1dBRUc7UUFDSCxhQUFhLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDN0QsNEJBQVUsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FDbEM7UUFFRDs7V0FFRztRQUNILGNBQWMsRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUM5RCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUNuQztRQUVEOztXQUVHO1FBQ0gsUUFBUSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQ3hELDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQzdCO1FBRUQ7Ozs7V0FJRztRQUNILE1BQU0sRUFBRSxDQUFJLElBQTJCLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLGlFQUFpRSxDQUFDLENBQUM7YUFDcEY7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","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/solana-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, ADAPTER_EVENTS, WalletInitializationError, WalletLoginError } from '@web3auth/base';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\nimport log from 'loglevel';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaWalletAdapter extends BaseAdapter {\n  constructor() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(this, \"torusInstance\", null);\n\n    _defineProperty(this, \"torusWalletOptions\", void 0);\n\n    _defineProperty(this, \"initParams\", void 0);\n\n    _defineProperty(this, \"loginSettings\", {});\n\n    _defineProperty(this, \"solanaProvider\", null);\n\n    _defineProperty(this, \"rehydrated\", false);\n\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider() {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      var _this$solanaProvider;\n\n      return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n    }\n\n    return null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    let network;\n\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const {\n        blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        rpcTarget,\n        chainId\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        logo: \"\"\n      };\n    } else {\n      const {\n        chainId,\n        blockExplorer,\n        displayName,\n        rpcTarget,\n        ticker,\n        tickerName\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        tickerName,\n        ticker,\n        logo: \"\"\n      };\n    }\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"solana wallet network\", network);\n    await this.torusInstance.init(_objectSpread(_objectSpread({\n      showTorusButton: false\n    }, this.initParams), {}, {\n      network\n    }));\n    log.debug(\"solana chainConfig\", this.chainConfig);\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, {\n      adapter: WALLET_ADAPTERS.TORUS_SOLANA\n    });\n\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      await this.solanaProvider.setupProvider(this.torusInstance.provider);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n        reconnected: this.rehydrated\n      });\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(_) {}\n\n}\n\nexport { SolanaWalletAdapter };\n//# sourceMappingURL=torusSolanaAdapter.esm.js.map\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst error_constants_1 = require(\"./error-constants\");\nconst classes_1 = require(\"./classes\");\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(error_constants_1.errorValues, codeString)) {\n            return error_constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (error_constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof classes_1.EthereumRpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\nexports.serializeError = serializeError;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQTREO0FBQzVELHVDQUF5RTtBQUV6RSxNQUFNLG1CQUFtQixHQUFHLDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztBQUNwRCxNQUFNLGdCQUFnQixHQUFHLDZEQUE2RCxDQUFDO0FBQ3ZGLE1BQU0sY0FBYyxHQUErQjtJQUNqRCxJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQztDQUNqRCxDQUFDO0FBRVcsUUFBQSw2QkFBNkIsR0FBRywyQkFBMkIsQ0FBQztBQUl6RTs7O0dBR0c7QUFDSCxTQUFnQixrQkFBa0IsQ0FDaEMsSUFBWSxFQUNaLGtCQUEwQixnQkFBZ0I7SUFFMUMsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzFCLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVuQyxJQUFJLE1BQU0sQ0FBQyw2QkFBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sNkJBQVcsQ0FBQyxVQUEyQixDQUFDLENBQUMsT0FBTyxDQUFDO1NBQ3pEO1FBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixPQUFPLHFDQUE2QixDQUFDO1NBQ3RDO0tBQ0Y7SUFDRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDO0FBZkQsZ0RBZUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFnQixXQUFXLENBQUMsSUFBWTtJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMzQixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25DLElBQUksNkJBQVcsQ0FBQyxVQUEy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","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageFromCode = exports.serializeError = exports.EthereumProviderError = exports.EthereumRpcError = exports.ethErrors = exports.errorCodes = void 0;\nconst classes_1 = require(\"./classes\");\nObject.defineProperty(exports, \"EthereumRpcError\", { enumerable: true, get: function () { return classes_1.EthereumRpcError; } });\nObject.defineProperty(exports, \"EthereumProviderError\", { enumerable: true, get: function () { return classes_1.EthereumProviderError; } });\nconst utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"serializeError\", { enumerable: true, get: function () { return utils_1.serializeError; } });\nObject.defineProperty(exports, \"getMessageFromCode\", { enumerable: true, get: function () { return utils_1.getMessageFromCode; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"ethErrors\", { enumerable: true, get: function () { return errors_1.ethErrors; } });\nconst error_constants_1 = require(\"./error-constants\");\nObject.defineProperty(exports, \"errorCodes\", { enumerable: true, get: function () { return error_constants_1.errorCodes; } });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQW9FO0FBVWxFLGlHQVZPLDBCQUFnQixPQVVQO0FBQ2hCLHNHQVh5QiwrQkFBcUIsT0FXekI7QUFWdkIsbUNBRWlCO0FBU2YsK0ZBVkEsc0JBQWMsT0FVQTtBQUNkLG1HQVhnQiwwQkFBa0IsT0FXaEI7QUFUcEIscUNBQXFDO0FBS25DLDBGQUxPLGtCQUFTLE9BS1A7QUFKWCx1REFBK0M7QUFHN0MsMkZBSE8sNEJBQVUsT0FHUCJ9","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorValues = exports.errorCodes = void 0;\nexports.errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\nexports.errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Ethereum provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9yLWNvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUF1QmEsUUFBQSxVQUFVLEdBQWU7SUFDcEMsR0FBRyxFQUFFO1FBQ0gsWUFBWSxFQUFFLENBQUMsS0FBSztRQUNwQixnQkFBZ0IsRUFBRSxDQUFDLEtBQUs7UUFDeEIsbUJBQW1CLEVBQUUsQ0FBQyxLQUFLO1FBQzNCLG1CQUFtQixFQUFFLENBQUMsS0FBSztRQUMzQixrQkFBa0IsRUFBRSxDQUFDLEtBQUs7UUFDMUIsYUFBYSxFQUFFLENBQUMsS0FBSztRQUNyQixLQUFLLEVBQUUsQ0FBQyxLQUFLO1FBQ2IsY0FBYyxFQUFFLENBQUMsS0FBSztRQUN0QixjQUFjLEVBQUUsQ0FBQyxLQUFLO1FBQ3RCLGFBQWEsRUFBRSxDQUFDLEtBQUs7UUFDckIsUUFBUSxFQUFFLENBQUMsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLG1CQUFtQixFQUFFLElBQUk7UUFDekIsWUFBWSxFQUFFLElBQUk7UUFDbEIsaUJBQWlCLEVBQUUsSUFBSTtRQUN2QixZQUFZLEVBQUUsSUFBSTtRQUNsQixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCO0NBQ0YsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHO0lBQ3pCLFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSx1R0FBdUc7S0FDakg7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsOENBQThDO0tBQ3hEO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLGNBQWM7UUFDeEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSw4QkFBOEI7S0FDeEM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsMEJBQTBCO0tBQ3BDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLGdCQUFnQjtLQUMxQjtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSxxQkFBcUI7S0FDL0I7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO0tBQ2pDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtLQUNqQztJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx1QkFBdUI7S0FDakM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUseUJBQXlCO0tBQ25DO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLDRCQUE0QjtLQUN0QztJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSwwRUFBMEU7S0FDcEY7SUFDRCxNQUFNLEVBQUU7UUFDTixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsa0VBQWtFO0tBQzVFO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx3REFBd0Q7S0FDbEU7Q0FDRixDQUFDIn0=","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Transaction } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\n\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nvar log = loglevel.getLogger(\"solana-embed\");\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst getNetworkConfig = label => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.mainnet-beta.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.testnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    default:\n      return undefined;\n  }\n};\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"windowRefs\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n\n      return;\n    } // Add to collection only if window is opened\n\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n\n}\n\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n}\n\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationProvider\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network: typeof network === \"string\" ? getNetworkConfig(network) : network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n\n    this.communicationProvider._handleWindow(windowId);\n\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    const buf = Buffer.from(response, \"hex\");\n    const sendTx = Transaction.from(buf);\n    return sendTx;\n  }\n\n  async signAllTransactions(transactions) {\n    const encodedTransactions = transactions.map(x => x.serialize({\n      requireAllSignatures: false\n    }).toString(\"hex\"));\n    const response = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedTransactions\n      }\n    });\n    const allSignedTransaction = response.map(msg => Transaction.from(Buffer.from(msg, \"hex\")));\n    return allSignedTransaction;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n\n        _payload.windowId = windowId;\n      }\n\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n\n        }); // for communication methods sending window id in jrpc req params\n\n\n        _payload.params.windowId = windowId;\n      }\n\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };\n//# sourceMappingURL=solanaEmbed.esm.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderError = exports.EthereumRpcError = void 0;\nconst fast_safe_stringify_1 = require(\"fast-safe-stringify\");\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        if (this.stack) {\n            serialized.stack = this.stack;\n        }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);\n    }\n}\nexports.EthereumRpcError = EthereumRpcError;\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n    /**\n     * Create an Ethereum Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidEthProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\nexports.EthereumProviderError = EthereumProviderError;\n// Internal\nfunction isValidEthProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGFzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUFnRDtBQVNoRDs7OztHQUlHO0FBQ0gsTUFBYSxnQkFBb0IsU0FBUSxLQUFLO0lBTTVDLFlBQVksSUFBWSxFQUFFLE9BQWUsRUFBRSxJQUFRO1FBRWpELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQ2IsNEJBQTRCLENBQzdCLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQzNDLE1BQU0sSUFBSSxLQUFLLENBQ2Isc0NBQXNDLENBQ3ZDLENBQUM7U0FDSDtRQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxNQUFNLFVBQVUsR0FBK0I7WUFDN0MsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUM7UUFDRixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzNCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztTQUM3QjtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUMvQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyw2QkFBYSxDQUNsQixJQUFJLENBQUMsU0FBUyxFQUFFLEVBQ2hCLGlCQUFpQixFQUNqQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXRERCw0Q0FzREM7QUFFRDs7O0dBR0c7QUFDSCxNQUFhLHFCQUF5QixTQUFRLGdCQUFtQjtJQUUvRDs7O09BR0c7SUFDSCxZQUFZLElBQVksRUFBRSxPQUFlLEVBQUUsSUFBUTtRQUVqRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakMsTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQsQ0FDNUQsQ0FBQztTQUNIO1FBRUQsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBaEJELHNEQWdCQztBQUVELFdBQVc7QUFFWCxTQUFTLHNCQUFzQixDQUFDLElBQVk7SUFDMUMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxDQUFVLEVBQUUsS0FBYztJQUNuRCxJQUFJLEtBQUssS0FBSyxZQUFZLEVBQUU7UUFDMUIsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMifQ=="],"sourceRoot":""}
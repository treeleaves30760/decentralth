(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c2145"],{"497a":function(t,n,i){"use strict";i.r(n),i.d(n,"PhantomAdapter",(function(){return d}));var e=i("9523"),o=i.n(e),s=i("b089"),a=i("7b09"),r=i("5c7d"),c=i.n(r);function h(t,n,i){return new Promise((e,o)=>{i>0?setTimeout(async()=>{const s=await t();s&&e(s),s||h(t,n,i-1).then(t=>(e(t),t)).catch(t=>o(t))},n):e(!1)})}const l=async function(){var t;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{interval:1e3,count:3};const i="undefined"!==typeof window&&!(null===(t=window.solana)||void 0===t||!t.isPhantom);if(i)return window.solana;const e=await h(()=>{var t;return null===(t=window.solana)||void 0===t?void 0:t.isPhantom},n.interval,n.count);return e?window.solana:null};class d extends s["e"]{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),o()(this,"name",s["i"].PHANTOM),o()(this,"adapterNamespace",s["c"].SOLANA),o()(this,"currentChainNamespace",s["f"].SOLANA),o()(this,"type",s["a"].EXTERNAL),o()(this,"status",s["d"].NOT_READY),o()(this,"_wallet",null),o()(this,"phantomProvider",null),o()(this,"rehydrated",!1),o()(this,"_onDisconnect",()=>{this._wallet&&(this._wallet.off("disconnect",this._onDisconnect),this.rehydrated=!1,this.status=this.status===s["d"].CONNECTED?s["d"].READY:s["d"].NOT_READY,this.emit(s["b"].DISCONNECTED))}),this.chainConfig=t.chainConfig}get isWalletConnected(){var t;return!(null===(t=this._wallet)||void 0===t||!t.isConnected||this.status!==s["d"].CONNECTED)}get provider(){var t;return(null===(t=this.phantomProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}setAdapterSettings(t){}async init(t){if(super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=Object(s["m"])(s["f"].SOLANA,"0x1")),this._wallet=await l({interval:500,count:3}),!this._wallet)throw s["j"].notInstalled();this.phantomProvider=new a["PhantomInjectedProvider"]({config:{chainConfig:this.chainConfig}}),this.status=s["d"].READY,this.emit(s["b"].READY,s["i"].PHANTOM);try{t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(n){c.a.error("Failed to connect with cached phantom provider",n),this.emit("ERRORED",n)}}async connect(){var t=this;try{if(super.checkConnectionRequirements(),this.status=s["d"].CONNECTING,this.emit(s["b"].CONNECTING,{adapter:s["i"].PHANTOM}),!this._wallet)throw s["j"].notInstalled();if(this._wallet.isConnected)await this.connectWithProvider(this._wallet);else{const i=this._wallet._handleDisconnect;try{await new Promise((n,e)=>{const o=async()=>{await this.connectWithProvider(this._wallet),n(this.provider)};if(!this._wallet)return e(s["j"].notInstalled());this._wallet.once("connect",o),this._wallet._handleDisconnect=function(){e(s["j"].windowClosed());for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return i.apply(t._wallet,o)},this._wallet.connect().catch(t=>{e(t)})})}catch(n){if(n instanceof s["l"])throw n;throw s["k"].connectionError(null===n||void 0===n?void 0:n.message)}finally{this._wallet._handleDisconnect=i}}if(!this._wallet.publicKey)throw s["k"].connectionError();return this._wallet.on("disconnect",this._onDisconnect),this.provider}catch(n){throw this.status=s["d"].READY,this.rehydrated=!1,this.emit(s["b"].ERRORED,n),n}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(!this.isWalletConnected)throw s["k"].notConnectedError("Not connected with wallet");try{var n;await(null===(n=this._wallet)||void 0===n?void 0:n.disconnect()),t.cleanup&&(this.status=s["d"].NOT_READY,this.phantomProvider=null,this._wallet=null),this.emit(s["b"].DISCONNECTED)}catch(i){this.emit(s["b"].ERRORED,s["k"].disconnectionError(null===i||void 0===i?void 0:i.message))}}async getUserInfo(){if(!this.isWalletConnected)throw s["k"].notConnectedError("Not connected with wallet, Please login/connect first");return{}}async connectWithProvider(t){if(!this.phantomProvider)throw s["k"].connectionError("No phantom provider");return await this.phantomProvider.setupProvider(t),this.status=s["d"].CONNECTED,this.emit(s["b"].CONNECTED,{adapter:s["i"].PHANTOM,reconnected:this.rehydrated}),this.provider}}}}]);
//# sourceMappingURL=chunk-2d0c2145.240fab19.js.map